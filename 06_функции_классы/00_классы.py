class Person:  # определение класса Person
    """
    self - ссылка на конкретный экземпляр класса.
    Нужна она для того, чтобы когда вы работаете
    со свойствами конкретного экземпляра класса,
    Python понимал, что вы работаете не со всеми
    экземплярами, а только с конкретным.
    """
    hairs = True  # атрибут класса (общее свойство для всех экземпляров)

    def __init__(self, name, age):  # конструктор класса (инструкции по созданию экземпляра)
        """name и age будут задаваться при создании экземпляра"""
        self.name = name  # атрибут экземпляра класса (для каждого экземпляра свое)
        self.age = age  # атрибут экземпляра класса (для каждого экземпляра свое)

    # создадим метод - функцию, которая будет относиться ко всем экземплярам класса Person
    def __str__(self):  # показывает информацию об объекте, когда объект вызывают через print
        """Метод может называться __str__/__repr__ - работать будет одинаково """
        return f'My name is {self.name}, I am {self.age} years old.'

    def say(self, phrase):
        return f'{self.name} says "{phrase}"'


# создаю экземпляры классы Person
dave = Person('Dave', 18)  # self помещается в скобочки
julia = Person('Julia', 21)
eva = Person('Eva', 15)

print(dave == julia)  # False, потому что они не ссылаются на одно и то же значение
dave.age = 35  # замена атрибута экземпляра
dave.hairs = False   # замена атрибута класса У ДЭЙВА
print(dave.age)

print(julia.say('Hello!'))  # методы применяются только к определенным экземплярам, для которых они были вызваны

print(dave)
